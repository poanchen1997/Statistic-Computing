A <- c(2, 5, 10)
diag(length(A))
data <- read.table('erdata.txt', head = FALSE)
View(data)
t(data[A])%*%as.matrix(data[A])
M_A <- diag(length(A)) + t(data[A])%*%as.matrix(data[A])
M_A
lgamma((nrow(data) + length(A) + 2)/2)
lgamma(0.5)
nrow(data)
(nrow(data) + length(A) + 2)
(nrow(data) + length(A) + 2)/2
lgamma((nrow(data) + length(A) + 2)/2)
lgamma((length(A) + 2)/2)
0.5*logdet(M_A)
logdet <- function(R){
log(prod(eigen(R)$values))
}
0.5*logdet(M_A)
t(data[1])%*%as.matrix(data[1])
t(data[1])%*%as.matrix(data[A])%*%inv(M_A)%*%t(data[A])%*%as.matrix(data[1])
# 2 -----------------------------------------------------------------------
library(matlib)
t(data[1])%*%as.matrix(data[A])%*%inv(M_A)%*%t(data[A])%*%as.matrix(data[1])
t(data[1])%*%as.matrix(data[A])
t(data[1])%*%as.matrix(data[A])%*%inv(M_A)
inv(M_A)
t(data[1])%*%as.matrix(data[A])%*%inv(M_A)
t(data[1])%*%as.matrix(data[A])
t(data[1])%*%as.matrix(data[A])%*%inv(M_A)
t(data[1])%*%as.matrix(data[A])%*%inv(M_A)%*%t(data[A])
t(data[1])%*%as.matrix(data[A])%*%inv(M_A)%*%t(data[A])%*%as.matrix(data[1])
logmarglik <- function(data, A){
# A is a vector
M_A <- diag(length(A)) + t(data[A])%*%as.matrix(data[A])
ans <- lgamma((nrow(data) + length(A) + 2)/2) -
lgamma((length(A) + 2)/2) -
0.5*logdet(M_A) -
((nrow(data) + length(A) + 2)/2)*log(1 + t(data[1])%*%as.matrix(data[1]) - t(data[1])%*%as.matrix(data[A])%*%inv(M_A)%*%t(data[A])%*%as.matrix(data[1]))
return(ans)
}
logmarglik(data, A)
1 + t(data[1])%*%as.matrix(data[1]) - t(data[1])%*%as.matrix(data[A])%*%inv(M_A)%*%t(data[A])%*%as.matrix(data[1])
log(56.0806)
lgamma((nrow(data) + length(A) + 2)/2) -
lgamma((length(A) + 2)/2) -
0.5*logdet(M_A)
M_A
t(data[1])%*%as.matrix(data[A])
t(data[1])%*%as.matrix(data[A])%*%inv(M_A)
t(data[1])%*%as.matrix(data[A])%*%inv(M_A)%*%t(data[A])
t(data[1])%*%as.matrix(data[A])%*%inv(M_A)%*%t(data[A])%*%as.matrix(data[1])
lgamma((nrow(data) + length(A) + 2)/2) -
lgamma((length(A) + 2)/2)
lgamma((nrow(data) + length(A) + 2)/2) -
lgamma((length(A) + 2)/2) -
0.5*logdet(M_A)
